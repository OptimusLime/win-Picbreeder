#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var BuilderClass = require('component-builder');

  // executes `component install`
var fs = require('fs');
var resolve = require('component-resolver');
var build = require('component-builder');

var sys = require('sys')
var exec = require('child_process').exec;
var child;


program
  .version('0.0.1')
//  .option('-C, --chdir <path>', 'change the working directory')

program
  .command('install')
  .description('run install command to download relevant modules')
  .option("-s, --setup_mode [mode]", "Which setup mode to use")
  .action(function(options){
    var mode = options.setup_mode || "normal";

    // http://nodejs.org/api.html#_child_processes
    //let's install some component things!

    console.log("Installing objects, please be patient")



    // resolve the dependency tree
    resolve(process.cwd(), {
      // install the remote components locally
      install: true,
      verbose: true
    }, function (err, tree) {
      if (err) throw err;

      // only include `.js` files from components' `.scripts` field
      build.scripts(tree)
        .use('scripts', build.plugins.js())
        .end(function (err, string) {
          if (err) throw err;
          fs.writeFileSync('build.js', string);
        });

      // only include `.css` files from components' `.styles` field
      build.styles(tree)
        .use('styles', build.plugins.css())
        .end(function (err, string) {
          if (err) throw err;
          fs.writeFileSync('build.css', string);
        });

      // only copy `images` to the build folder
      build.files(tree)
        .use('images', build.plugins.symlink())
        .end(); // callback optional
    })



     
 });

// program
//   .command('exec <cmd>')
//   .alias('ex')
//   .description('execute the given remote cmd')
//   .option("-e, --exec_mode <mode>", "Which exec mode to use")
//   .action(function(cmd, options){
//     console.log('exec "%s" using %s mode', cmd, options.exec_mode);
//   }).on('--help', function() {
//     console.log('  Examples:');
//     console.log();
//     console.log('    $ deploy exec sequential');
//     console.log('    $ deploy exec async');
//     console.log();
//   });

program
  .command('*')
  .action(function(env){
    console.log('deploying "%s"', env);
  });

program.parse(process.argv);
